
name: CI/CD for IOS

on:
  push:
    branches:
      - DEV-IOS

permissions:
  id-token: write
  contents: read    


jobs:
  Authentication:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Import certificates (iOS)
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          
          # import certificate and provisioning profile from secrets
          echo -n $BUILD_CERTIFICATE_BASE64 | base64 --decode --output $CERTIFICATE_PATH
          echo -n $BUILD_PROVISION_PROFILE_BASE64 | base64 --decode --output $PP_PATH
          
          # create a temporary keychain
          security create-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
          
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P $P12_PASSWORD -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychains -d user -s $KEYCHAIN_PATH
          
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
  
  build:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
        
    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: "12.x"
      # 10   
    - uses: subosito/flutter-action@v2
      with:
          # 11
        flutter-version: "3.10.6"
        channel: 'stable'

    - name: Build iOS
      run: | 
        flutter build ipa --release --no-codesign
        /usr/bin/xcodebuild -version






    deploy:
    runs-on: macos-latest
    needs: build
    steps:
      - name: Upload to TestFlight
        run: |
          # Assuming your IPA file is in the build/ios/ directory
          ipa_path=build/ios/Runner.ipa
          /usr/bin/xcrun altool --upload-app -f $ipa_path -t ios -u ${{ secrets.APPLE_ID }} -p ${{ secrets.APPLE_ID_PASSWORD }}















          Run # Assuming your IPA file is in the build/ios/ directory
  # Assuming your IPA file is in the build/ios/ directory
  ipa_path=build/ios/Runner.ipa
  /usr/bin/xcrun altool --upload-app -f $ipa_path -t ios -u  -p 
  shell: /bin/bash -e {0}
-p's password: 
2023-12-09 06:10:37.901 *** Error: Error uploading 'build/ios/Runner.ipa'.
2023-12-09 06:10:37.901 *** Error: Unable to upload archive. The file 'build/ios/Runner.ipa' cannot be found. (-43)
 {
    NSLocalizedDescription = "Unable to upload archive.";
    NSLocalizedFailureReason = "The file 'build/ios/Runner.ipa' cannot be found.";
}
2023-12-09 06:10:37.902 *** Error: Unable to read password from stdin. Unable to validate your application. (-1004)
 {
    NSLocalizedDescription = "Unable to read password from stdin.";
    NSLocalizedFailureReason = "Unable to validate your application.";
}
