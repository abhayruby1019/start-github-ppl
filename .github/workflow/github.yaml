on:
  push:
    branches:
      - DEV # Change this to your respective branch
permissions:
  id-token: write
  contents: read

jobs:
  codeql:
    runs-on: ubuntu-latest
    steps:
      - name: Notify build started
        uses: dchourasia/ms-teams-notification@1.1 #  or "./" if in a local set-up
        if: always()
        with:
          github-token: ${{ github.token }}
          webhook-uri: https://poonawallafincorp.webhook.office.com/webhookb2/efdaf8b5-8df0-4bb7-bc59-22795a77abcf@3b3240ed-529f-4a11-980d-4cfdc12284c3/IncomingWebhook/c73e85975d114d7691133e6c79ccfcb4/1e7d9bd1-828f-4034-8862-ed1ea5912fce
      - name: Checkout code
        uses: actions/checkout@v3
      - name: sonar code quality check
        uses: docker://sonarsource/sonar-scanner-cli:latest
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}    
        with:
          args: >
            -Dsonar.projectKey=common_utililty_service
            -Dsonar.sources=.
  build:
    needs: codeql
    if: always()
    runs-on: [self-hosted, actions_runner_dev]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
    #Login to docker and push to ecr
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::500440857146:role/github_role
          aws-region: ap-south-1
      
      - name: Login to ECR
        uses: docker/login-action@v3
        with: 
          registry: 500440857146.dkr.ecr.ap-south-1.amazonaws.com

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: 500440857146.dkr.ecr.ap-south-1.amazonaws.com
          REPOSITORY: common_utililty_service
        run: |
          docker build -t $REGISTRY/$REPOSITORY:${{ github.sha }} .
          docker push $REGISTRY/$REPOSITORY:${{ github.sha }}

      
      - name: Install Kubectl 
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.24.0'
        id: install

      -   name: Install AWS CLI v2
          run:  |
                curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o /tmp/awscliv2.zip
                unzip -q /tmp/awscliv2.zip -d /tmp
                rm /tmp/awscliv2.zip
                sudo /tmp/aws/install --update
                rm -rf /tmp/aws/

      - name: Update context
        run:  aws eks update-kubeconfig --region ap-south-1 --name PFL-DEV-APP-digital-Platform

      - name: Deploy to K8s
        run: |
          kubectl get pods -A
          kubectl apply -f manifest/common_utility.yaml -n default
          kubectl set image deployment/common-utility-microservice common-utility-microservice=500440857146.dkr.ecr.ap-south-1.amazonaws.com/common_utililty_service:${{ github.sha }} -n default
        
  notify:
      runs-on: ubuntu-latest
      if: always()
      needs: build
      steps:
      - name: Notify dedicated teams channel
        uses: jdcargile/ms-teams-notification@v1.3
        with:
          github-token: ${{ github.token }} # this will use the runner's token.
          ms-teams-webhook-uri: https://poonawallafincorp.webhook.office.com/webhookb2/efdaf8b5-8df0-4bb7-bc59-22795a77abcf@3b3240ed-529f-4a11-980d-4cfdc12284c3/IncomingWebhook/c73e85975d114d7691133e6c79ccfcb4/1e7d9bd1-828f-4034-8862-ed1ea5912fce
          notification-summary: "Github Action Build Number ${{ github.run_number }} Completed for ${{ github.repository }} and the outcome is ${{ needs.build.result }}."
